name: 'Release Beta Version'

on:
  push:
    branches:
      - 'master'

jobs:
  bump-version:
    name: 'Bump version'
    if: |
          !startsWith(github.event.head_commit.message, 'chore(release)') &&
          !startsWith(github.event.head_commit.message, 'ci: version bump')
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 'Checkout repository'
        uses: 'actions/checkout@v3'
        with:
          persist-credentials: false
          ref: ${{ github.ref }}
      - name: 'Automated Version Bump'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          minor-wording:  ''
          major-wording:  ''
          patch-wording:  ''
          version-type:  prerelease
          default: prerelease
          preid: 'beta'
          tag-prefix: 'v'
          skip-tag:  'true'
          bump-policy: 'last-commit'
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      - name: 'Output new version'
        env:
          NEW_VERSION: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new version $NEW_VERSION"
    outputs:
      newTag: ${{ steps.version-bump.outputs.newTag }}
  
  draft-release:
    name: 'Draft release'
    runs-on: ubuntu-latest
    needs: bump-version
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Create draft release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.bump-version.outputs.newTag }}
          tag: ${{ needs.bump-version.outputs.newTag }}
          draft: true
          prerelease: true
          generateReleaseNotes: true
    outputs:
      id: ${{ steps.create_release.outputs.id }}
  
  build:
    runs-on: ${{ matrix.os }}
    needs: draft-release

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: master

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          check-latest: true
          cache: 'yarn'

      - name: Install dependencies
        if: matrix.os != 'windows-latest'
        run: PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn install

      - name: Install dependencies on Windows
        if: matrix.os == 'windows-latest'
        run: yarn install

      - name: Prepare build
        run: |
          yarn prebuild
          yarn compile

      - name: Build Electron app
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: yarn run build -p always
  
  publish-release:
    name: 'Publish release'
    runs-on: ubuntu-latest
    needs: [bump-version, build]
    permissions:
      contents: write
    steps:
      - uses: ncipollo/release-action@v1
        with:
          name: ${{ needs.bump-version.outputs.newTag }}
          tag: ${{ needs.bump-version.outputs.newTag }}
          draft: false
          prerelease: true
          allowUpdates: true
          updateOnlyUnreleased: true
          generateReleaseNotes: true
