on:
  workflow_call:
    inputs:
      type:
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version-file: 'package.json'
          cache: 'yarn'

      - name: Install dependencies
        if: inputs.type == 'test' || matrix.os == 'windows-latest'
        run: yarn install

      - name: Install dependencies without Playwright
        if: inputs.type != 'test' && matrix.os != 'windows-latest'
        run: PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 yarn install

      - name: Set env variables
        run: |
          touch .env
          echo SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }} >> .env
          echo SENTRY_ORG=${{ secrets.SENTRY_ORG }} >> .env
          echo SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }} >> .env
          echo SENTRY_DSN=${{ secrets.SENTRY_DSN }} >> .env
          echo ZOOM_SDK_KEY=${{ secrets.ZOOM_SDK_KEY }} >> .env
          echo ZOOM_SIGNATURE_ENDPOINT=${{ secrets.ZOOM_SIGNATURE_ENDPOINT }} >> .env

      - name: Disable Sentry
        if: inputs.type == 'test'
        run: echo SENTRY_DISABLE=1 >> .env

      - name: Upload source maps to Sentry
        if: |
          inputs.type == 'beta' || (
            inputs.type != 'test' &&
            github.event_name == 'push' &&
            !startsWith(github.ref, 'refs/tags/v') &&
            startsWith(github.event.head_commit.message, 'chore(release)')
          )
        run: echo SENTRY_SOURCE_MAPS=1 >> .env

      - name: Build app for testing
        if: |
          inputs.type != 'beta' && (
            inputs.type == 'test' ||
            github.event_name != 'push' ||
            startsWith(github.ref, 'refs/tags/v') ||
            !startsWith(github.event.head_commit.message, 'chore(release)')
          )
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: yarn build-dev

      - name: Build app for beta
        if: inputs.type == 'beta'
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: yarn build -p always

      - name: Build app for production
        if: |
          inputs.type == 'release' &&
          github.event_name == 'push' &&
          !startsWith(github.ref, 'refs/tags/v') &&
          startsWith(github.event.head_commit.message, 'chore(release)')
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: yarn build -p onTagOrDraft

      - name: Run tests
        if: inputs.type == 'test'
        run: |
          npx playwright install --with-deps chromium
          yarn lint

      - name: Upload screenshots to docs
        if: |
          inputs.type == 'test[remove]' &&
          matrix.os == 'ubuntu-latest' &&
          github.event_name == 'push' &&
          !startsWith(github.ref, 'refs/tags/v') &&
          startsWith(github.event.head_commit.message, 'chore(release)')
        uses: dmnemec/copy_file_to_another_repo_action@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.PERSONAL_TOKEN }}
        with:
          source_file: 'img'
          destination_repo: 'sircharlo/meeting-media-manager'
          destination_branch: 'docs'
          destination_folder: 'assets'
          user_email: 'sircharlo@gmail.com'
          user_name: 'sircharlo'
          commit_message: 'chore: update screenshots'

      - uses: actions/upload-artifact@v3
        if: |
          inputs.type != 'test' &&
          !startsWith(github.event.head_commit.message, 'chore(release)')
        with:
          name: release-files
          path: |
            build/
            !build/icons/
            !build/*-unpacked/
            !build/mac-universal/
            !build/*.blockmap
            !build/*.yml
          retention-days: 2

      - name: Cancel workflow
        if: failure()
        uses: andymckay/cancel-action@0.3
